# Michael Schuerig, michael@schuerig.de, 2007-02-24
# [2007-12-21] Updated by Victor Serbin (chepel@hotmail.com) for gem v1.0
# [2008-06-07] Updated by George Ogata (george.ogata@gmail.com) for v1.1 + gem names
# Free for all uses.

have gem &&
{
  GEM_LATEST_CACHE_FILE=`ruby -rubygems -rrubygems/source_info_cache \
                   -e 'print Gem::SourceInfoCache.new.latest_cache_file'`
  GEM_CACHE_FILE=`ruby -rubygems -rrubygems/source_info_cache \
                  -e 'print Gem::SourceInfoCache.new.cache_file'`
  GEM_ALL_NAMES_FILE=`dirname $GEM_LATEST_CACHE_FILE`/all_names.completion
  GEM_ALL_NAME_VERSIONS_FILE=`dirname $GEM_LATEST_CACHE_FILE`/all_name_versions.completion

  #
  # Output all gem names.
  #
  function _gem_all_names {
      if [ ! -e $GEM_ALL_NAMES_FILE -o \
           $GEM_LATEST_CACHE_FILE -nt $GEM_ALL_NAMES_FILE ]; then
          ruby <<EOF
              require 'rubygems/source_info_cache_entry'
              text = File.read('$GEM_LATEST_CACHE_FILE')
              names = Marshal.load(text).values.map do |entry|
                entry.source_index.map{|name, spec| spec.name}
              end.flatten.uniq
              open('$GEM_ALL_NAMES_FILE', 'w'){|f| f.puts names}
EOF
      fi

      cat $GEM_ALL_NAMES_FILE
  }

  #
  # Output all installed gem names.
  #
  function _gem_installed_names {
      ruby <<EOF
          require 'rubygems'
          names = Gem::SourceIndex.from_installed_gems.map do |name, spec|
            spec.name
          end.uniq
          puts names
EOF
  }

  #
  # Output all gem NAME-VERSION strings.
  #
  function _gem_all_name_versions {
      if [ ! -e $GEM_ALL_NAME_VERSIONS_FILE -o \
           $GEM_LATEST_CACHE_FILE -nt $GEM_ALL_NAME_VERSIONS_FILE ]; then
          ruby <<EOF
              require 'rubygems/source_info_cache_entry'
              text = File.read('$GEM_LATEST_CACHE_FILE')
              names = Marshal.load(text).values.map do |entry|
                entry.source_index.map{|name, spec| name}
              end.flatten.uniq
              open('$GEM_ALL_NAME_VERSIONS_FILE', 'w'){|f| f.puts names}
EOF
      fi

      cat $GEM_ALL_NAME_VERSIONS_FILE
  }

  _gem()
  {
      local cur subcommand completions

      COMPREPLY=()
      cur=${COMP_WORDS[COMP_CWORD]}

      subcommand=''
      for i in `seq 1 ${#COMP_WORDS[*]}`; do
        if [ -n "${COMP_WORDS[i]%%-*}" ]; then
          subcommand=${COMP_WORDS[i]}
          break
        fi
      done

      COMMANDS='build cert check cleanup contents dependency\
        environment fetch generate_index help install list\
        lock mirror outdated pristine query rdoc search server\
        sources specification stale uninstall unpack update which'

      GEM_OPTIONS='\
        -h --help\
        -v --version'

      COMMON_OPTIONS='\
        -h --help\
        -V --verbose --no-verbose\
        -q --quiet\
        --config-file\
        --backtrace\
        --debug'

      LOCAL_REMOTE_OPTIONS='\
        -l --local\
        -r --remote\
        -b --both\
        -B --bulk-threshold\
        --source\
        -p --http-proxy --no-http-proxy\
        -u --update-sources --no-update-sources'

      INSTALL_UPDATE_OPTIONS='\
        -i --install-dir\
        -n --bindir\
        -d --rdoc --no-rdoc\
           --ri --no-ri\
        -E --env-shebang --no-env-shebang\
        -f --force --no-force\
        -t --test --no-test\
        -w --wrappers --no-wrappers\
        -P --trust-policy\
           --ignore-dependencies\
        -y --include-dependencies\
           --format-executable --no-format-executable'

      CERT_OPTIONS='\
        -a -add\
        -l --list\
        -r --remove\
        -b --build\
        -C --certificate\
        -K --private-key\
        -s --sign'

      CHECK_OPTIONS='\
        --verify\
        -a --alien\
        -t --test\
        -v --version'

      CLEANUP_OPTIONS='\
        -d --dry-run'

      CONTENTS_OPTIONS='\
        -v --version\
        -s --spec-dir\
        -l --lib-only --no-lib-only'

      DEPENDENCY_OPTIONS='\
        -v --version\
        --platform\
        -R --reverse-dependencies --no-reverse-dependencies\
        -p --pipe'

      ENVIRONMENT_OPTIONS='\
        packageversion\
        gemdir\
        gempath\
        version\
        remotesources'

      FETCH_OPTIONS='\
        -v --version\
        --platform\
        -B --bulk-threshold\
        -p --http-proxy --no-http-proxy\
        --source'

      GENERATE_INDEX_OPTIONS='\
        -d --directory'

      HELP_OPTIONS="commands examples platforms $COMMANDS"

      INSTALL_OPTIONS='\
        --platform\
        -v --version'

      LIST_OPTIONS='\
        -i --installed --no-installed\
        -v --version\
        -d --details --no-details\
        --versions --no-versions\
        -a --all'

      LOCK_OPTIONS='\
        -s --strict --no-strict'

      MIRROR_OPTIONS=''

      OUTDATED_OPTIONS='\
        --platform'

      PRISTINE_OPTIONS='\
        --all\
        -v --version'

      QUERY_OPTIONS='\
        -i --installed --no-installed\
        -v --version\
        -n --name-matches\
        -d --details --no-details\
        --versions --no-versions\
        -a --all'

      RDOC_OPTIONS='\
        --all\
        --rdoc --no-rdoc\
        --ri --no-ri\
        -v --version'

      SEARCH_OPTIONS='\
        -i --installed --no-installed\
        -v --version\
        -d --details --no-details\
        --versions --no-versions\
        -a --all'

      SERVER_OPTIONS='\
        -p --port\
        -d --dir\
        --daemon --no-daemon'

      SOURCES_OPTIONS='\
        -a --add\
        -l --list\
        -r --remove\
        -u --update\
        -c --clear-all'

      SPECIFICATION_OPTIONS='\
        -v --version\
        --platform\
        --all'

      UNINSTALL_OPTIONS='\
        -a --all --no-all\
        -i --ignore-dependencies --no-ignore-dependencies\
        -x --executables --no-executables\
        -i --install-dir\
        -n --bindir\
        -v --version\
        --platform'

      UNPACK_OPTIONS='\
        --target\
        -v --version'

      UPDATE_OPTIONS='\
        --system\
        --platform'

      WHICH_OPTIONS='\
        -a --all --no-all\
        -g --gems-first --no-gems-first'

      case "${subcommand}" in
        build)
          completions="$COMMON_OPTIONS"
          ;;
        cert)
          completions="$COMMON_OPTIONS $CERT_OPTIONS"
          ;;
        check)
          completions="$COMMON_OPTIONS $CHECK_OPTIONS"
          ;;
        cleanup)
          completions="$COMMON_OPTIONS $CLEANUP_OPTIONS `_gem_installed_names`"
          ;;
        contents)
          completions="$COMMON_OPTIONS $CONTENTS_OPTIONS `_gem_installed_names`"
          ;;
        dependency)
          completions="$COMMON_OPTIONS $LOCAL_REMOTE_OPTIONS $DEPENDENCY_OPTIONS `_gem_all_names`"
          ;;
        environment)
          completions="$COMMON_OPTIONS $ENVIRONMENT_OPTIONS"
          ;;
        fetch)
          completions="$COMMON_OPTIONS $FETCH_OPTIONS `_gem_all_names`"
          ;;
        generate_index)
          completions="$COMMON_OPTIONS $GENERATE_INDEX_OPTIONS"
          ;;
        help)
          completions="$COMMON_OPTIONS $HELP_OPTIONS"
          ;;
        install)
          completions="$COMMON_OPTIONS $INSTALL_UPDATE_OPTIONS $LOCAL_REMOTE_OPTIONS $INSTALL_OPTIONS `_gem_all_names`"
          ;;
        list)
          completions="$COMMON_OPTIONS $LOCAL_REMOTE_OPTIONS $LIST_OPTIONS"
          ;;
        lock)
          completions="$COMMON_OPTIONS $LOCK_OPTIONS `_gem_all_name_versions`"
          ;;
        mirror)
          completions="$COMMON_OPTIONS $MIRROR_OPTIONS"
          ;;
        outdated)
          completions="$COMMON_OPTIONS $LOCAL_REMOTE_OPTIONS $OUTDATED_OPTIONS"
          ;;
        pristine)
          completions="$COMMON_OPTIONS $PRISTINE_OPTIONS `_gem_installed_names`"
          ;;
        query)
          completions="$COMMON_OPTIONS $LOCAL_REMOTE_OPTIONS $QUERY_OPTIONS"
          ;;
        rdoc)
          completions="$COMMON_OPTIONS $RDOC_OPTIONS `_gem_installed_names`"
          ;;
        search)
          completions="$COMMON_OPTIONS $LOCAL_REMOTE_OPTIONS $SEARCH_OPTIONS"
          ;;
        server)
          completions="$COMMON_OPTIONS $SERVER_OPTIONS"
          ;;
        sources)
          completions="$COMMON_OPTIONS $SOURCES_OPTIONS"
          ;;
        specification)
          completions="$COMMON_OPTIONS $LOCAL_REMOTE_OPTIONS $SPECIFICATION_OPTIONS `_gem_all_names`"
          ;;
        stale)
          completions="$COMMON_OPTIONS"
          ;;
        uninstall)
          completions="$COMMON_OPTIONS $UNINSTALL_OPTIONS `_gem_installed_names`"
          ;;
        unpack)
          completions="$COMMON_OPTIONS $UNPACK_OPTIONS `_gem_installed_names`"
          ;;
        update)
          completions="$COMMON_OPTIONS $LOCAL_REMOTE_OPTIONS $INSTALL_UPDATE_OPTIONS $UPDATE_OPTIONS `_gem_installed_names`"
          ;;
        which)
          completions="$COMMON_OPTIONS $WHICH_OPTIONS"
          ;;
        *)
          completions="$COMMANDS $GEM_OPTIONS"
          ;;
      esac

      COMPREPLY=( $( compgen -W "$completions" -- $cur ) )
      return 0
  }

  complete -F _gem $filenames gem
}
